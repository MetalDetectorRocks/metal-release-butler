plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'groovy'
	id 'jacoco'
}

group = 'rocks.metaldetector'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

springBoot {
	mainClassName = 'rocks.metaldetector.butler.MetalReleaseButlerApplication'
}

def swaggerVersion = '2.9.2'
def spockVersion = '2.0-M3-groovy-3.0'
def groovyVersion = '3.0.4'
def postgresqlVersion = '42.2.12'
def bucket4JVersion = '0.2.0'
def jsonwebtokenVersion = '0.9.1'
def httpBuilderVersion = '0.7.1'
def commonsIoVersion = '2.6'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.apache.httpcomponents:httpclient"

	implementation "org.springframework.boot:spring-boot-starter-cache"
	implementation "org.ehcache:ehcache"
	implementation "com.giffing.bucket4j.spring.boot.starter:bucket4j-spring-boot-starter:$bucket4JVersion"

	implementation "org.codehaus.groovy:groovy-all:$groovyVersion" exclude group:"org.codehaus.groovy", module: "groovy-testng"

	implementation "org.codehaus.groovy.modules.http-builder:http-builder:$httpBuilderVersion"
	implementation "commons-io:commons-io:$commonsIoVersion"

	implementation "io.springfox:springfox-swagger2:$swaggerVersion"
	implementation "io.springfox:springfox-swagger-ui:$swaggerVersion"
	developmentOnly "org.springframework.boot:spring-boot-devtools"
	runtimeOnly "com.h2database:h2"
	runtimeOnly "org.postgresql:postgresql:$postgresqlVersion"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	implementation "io.jsonwebtoken:jjwt:$jsonwebtokenVersion"

	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: 'junit', module: 'junit'
	}
	testImplementation "org.spockframework:spock-core:$spockVersion"
	testImplementation "org.spockframework:spock-spring:$spockVersion"
	testImplementation "org.springframework.security:spring-security-test"
}

ext {
	dependencyVersions = ["commons-lang:commons-lang:2.4",
												"org.junit:junit-bom:5.7.0-M1",
												"org.ow2.asm:asm:8.0.1",
												"org.objenesis:objenesis:3.1"]
	dependencyGroupVersions = ["org.codehaus.groovy": groovyVersion]
}

allprojects {
	configurations {
		all {
			resolutionStrategy {
				failOnVersionConflict()
				force dependencyVersions
				eachDependency { DependencyResolveDetails details ->
					def forcedVersion = dependencyGroupVersions[details.requested.group]
					if (forcedVersion) {
						details.useVersion forcedVersion
					}
				}
				cacheDynamicVersionsFor 0, "seconds"
			}
		}
	}
}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams(true)
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled false
	}
}
