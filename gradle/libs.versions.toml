[versions]
commonsIo = "2.18.0"
groovy = "4.0.26"
jsonwebtoken = "0.12.6"
jsoup = "1.19.1"
junit = "5.12.1"
jupiterEngine = "1.12.1"
lokiLogbackAppender = "1.6.0"
postgres = "42.7.5"
spock = "2.3-groovy-4.0"
springCloudStarter = "3.3.0"
tagsoup = "1.2.1"

[libraries]
commonsIo = { module = "commons-io:commons-io", version.ref = "commonsIo" }
flyway = { module = "org.flywaydb:flyway-core" }
flywayPostgres = { module = "org.flywaydb:flyway-database-postgresql" }
groovy = { module = "org.apache.groovy:groovy", version.ref = "groovy" }
groovyXml = { module = "org.apache.groovy:groovy-xml", version.ref = "groovy" }
groovyDatetime = { module = "org.apache.groovy:groovy-datetime", version.ref = "groovy" }
groovyTest = { module = "org.apache.groovy:groovy-test", version.ref = "groovy" }
h2 = { module = "com.h2database:h2" }
httpClient = { module = "org.apache.httpcomponents.client5:httpclient5" }
junitBom = { module = "org.junit:junit-bom", version.ref = "junit" }
jupiterEngine = { module = "org.junit.platform:junit-platform-engine", version.ref = "jupiterEngine" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
jjwtApi = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jsonwebtoken" }
jjwtImpl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jsonwebtoken" }
jjwtJackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jsonwebtoken" }
lokiLogbackAppender = { module = "com.github.loki4j:loki-logback-appender", version.ref = "lokiLogbackAppender" }
micrometerRegistryPrometheus = { module = "io.micrometer:micrometer-registry-prometheus" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
spockCore = { module = "org.spockframework:spock-core", version.ref = "spock" }
spockSpring = { module = "org.spockframework:spock-spring", version.ref = "spock" }
springBootConfigurationProcessor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
springBootDevTools = { module = "org.springframework.boot:spring-boot-devtools" }
springBootStarterActuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
springBootStarterDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
springBootStarterOauth2ResourceServer = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server" }
springBootStarterSecurity = { module = "org.springframework.boot:spring-boot-starter-security" }
springBootStarterTest = { module = "org.springframework.boot:spring-boot-starter-test" }
springBootStarterValidation = { module = "org.springframework.boot:spring-boot-starter-validation" }
springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web" }
springCloudStarterAws = { module = "io.awspring.cloud:spring-cloud-aws-starter", version.ref = "springCloudStarter" }
springCloudStarterAwsS3 = { module = "io.awspring.cloud:spring-cloud-aws-starter-s3", version.ref = "springCloudStarter" }
springSecurityTest = { module = "org.springframework.security:spring-security-test" }
tagsoup = { module = "org.ccil.cowan.tagsoup:tagsoup", version.ref = "tagsoup" }

# for dependency enforcement
logbackCore = { module = "ch.qos.logback:logback-core", version = "1.5.18" }
nettyCommon = { module = "io.netty:netty-common", version = "4.1.119.Final" }

[bundles]
flyway = ["flyway", "flywayPostgres"]
groovyApp = ["groovy", "groovyXml", "groovyDatetime"]
jjwt = ["jjwtApi", "jjwtImpl", "jjwtJackson"]
testing = ["groovyTest", "spockCore", "spockSpring", "springBootStarterTest", "jupiterEngine"]
springBootStarterApp = ["springBootStarterActuator", "springBootStarterOauth2ResourceServer", "springBootStarterSecurity", "springBootStarterValidation", "springBootStarterWeb"]
springCloudStarter = ["springCloudStarterAws", "springCloudStarterAwsS3"]

[plugins]
dockerPublish = { id = "de.europace.docker-publish", version = "2.0.14" }
springBoot = { id = "org.springframework.boot", version = "3.4.3" }
springDependencyManagement = { id = "io.spring.dependency-management", version = "1.1.7" }
